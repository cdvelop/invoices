package invoices

import "testing"

func TestCommafs(t *testing.T) {
	testList{
		{"0", commaf(0), "0"},
		{"10.11", commaf(10.11), "10.11"},
		{"100", commaf(100), "100"},
		{"1,000", commaf(1000), "1,000"},
		{"10,000", commaf(10000), "10,000"},
		{"100,000", commaf(100000), "100,000"},
		{"834,142.32", commaf(834142.32), "834,142.32"},
		{"10,000,000", commaf(10000000), "10,000,000"},
		{"10,100,000", commaf(10100000), "10,100,000"},
		{"10,010,000", commaf(10010000), "10,010,000"},
		{"10,001,000", commaf(10001000), "10,001,000"},
		{"123,456,789", commaf(123456789), "123,456,789"},
		{"maxf64", commaf(maxFloat64), "179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000"},
		{"minf64", commaf(smallestNonzeroFloat64), "0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005"},
		{"-123,456,789", commaf(-123456789), "-123,456,789"},
		{"-10,100,000", commaf(-10100000), "-10,100,000"},
		{"-10,010,000", commaf(-10010000), "-10,010,000"},
		{"-10,001,000", commaf(-10001000), "-10,001,000"},
		{"-10,000,000", commaf(-10000000), "-10,000,000"},
		{"-100,000", commaf(-100000), "-100,000"},
		{"-10,000", commaf(-10000), "-10,000"},
		{"-1,000", commaf(-1000), "-1,000"},
		{"-100.11", commaf(-100.11), "-100.11"},
		{"-10", commaf(-10), "-10"},
	}.validate(t)
}

func TestRoundNumber(t *testing.T) {
	testList{
		{"Redondeo 3.1400001049 hacia abajo", roundChileanNumber(3.1400001049), 3.14},
		{"Redondeo 5.9999999999 hacia arriba", roundChileanNumber(5.9999999999), 6.00},
		{"Redondeo 25.56 sin cambios", roundChileanNumber(25.56), 25.56},
		{"Redondeo 7.254 hacia abajo", roundChileanNumber(7.254), 7.25},
		{"Redondeo 8.756 hacia arriba", roundChileanNumber(8.756), 8.76},
		{"Redondeo 5.991 hacia abajo", roundChileanNumber(5.991), 5.99},
	}.validate(t)

}

type testList []struct {
	name, got, exp any
}

func (tl testList) validate(t *testing.T) {
	for _, test := range tl {
		if test.got != test.exp {
			t.Errorf("\n‚ùåEn: %v, se esperaba: '%v', pero se obtuvo: '%v'",
				test.name, test.exp, test.got)
		}
	}
}
